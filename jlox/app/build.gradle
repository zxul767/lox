/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.3/userguide/building_java_projects.html
 */
import dev.zxul767.parsing.astgen.GenerateAst

plugins {
    // Build self-contained applications as "fat" jars
   id 'com.github.johnrengelman.shadow' version '7.1.2'
    // Apply the application plugin to add support for building a CLI application in Java.
   id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    // Hamcrest for custom matchers to ease assertions
    testImplementation 'org.hamcrest:hamcrest:2.2'

    // Provide shell-like capabilities (editing, command history search, etc.) for a more
    // powerful REPL experience
    implementation 'org.jline:jline:3.17.0'
}

application {
    // Define the main class for the application.
    mainClass = 'dev.zxul767.lox.Lox'
}

run {
    standardInput = System.in
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

def generateAst = tasks.register('astgen') {
    def folder = file(layout.buildDirectory.dir("generated/sources/$name/main/java"))
    outputs.dir(folder).withPropertyName('outputDir')
    doLast {
        GenerateAst.main(folder.getAbsolutePath())
        println "Generated AST sources in $folder"
    }
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn generateAst
    options.compilerArgs += ["-Xlint:unchecked"]
}

sourceSets {
    main {
         java {
              srcDir(generateAst)
         }
    }
}
